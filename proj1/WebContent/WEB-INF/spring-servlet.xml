<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd">

	<context:annotation-config />
	<context:component-scan base-package="mm.com.proj1.controller,mm.com.proj1.validator,mm.com.proj1.service,mm.com.proj1.dao" />
 	<mvc:annotation-driven />  
 	<mvc:default-servlet-handler/>
 	
 	<mvc:resources mapping="/resources/**" location="/resources/" />

	<context:property-placeholder location="classpath:database.properties" />
	
	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="mm.com.proj1.entity"/>  
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"/>

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layout/views.xml</value>
			</list>
		</property>
	</bean>

	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- <property name="maxUploadSize" value="10000000000" /> -->
	</bean>
		
<!-- 	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/welcome*"/>
			<mvc:exclude-mapping path="/checkShift*"/>
			<mvc:exclude-mapping path="/checkAuth*"/>
			<bean class="com.psh.fusion.pos.controller.interceptor.AdminAuthInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
    
   <!--  <bean id="messageSource"
	    class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <property name="basename" value="classpath:userLabel" />
	    <property name="defaultEncoding" value="UTF-8"/>
	</bean>	 -->
	
	<!-- ***** Enable UTF-8 in server response ***** -->	
    <mvc:annotation-driven>
	    <!-- register custom converter that returns UTF-8 encoded response-body by defualt -->
	    <mvc:message-converters register-defaults="true">
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	            <constructor-arg index="0" name="defaultCharset" value="UTF-8"/>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	 
	<!-- <bean id="localeResolver"
	    class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
	    <property name="defaultLocale" value="en"/>
	</bean> -->
	 
	<!-- <bean id="handlerMapping"
	    class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	    <property name="interceptors">
	        <ref bean="localeChangeInterceptor" />
	    </property>
	</bean> -->
	
	<websocket:message-broker application-destination-prefix="/ws">
	    <websocket:stomp-endpoint path="/c_message">
	        <websocket:sockjs/>
	    </websocket:stomp-endpoint>
	    <websocket:simple-broker prefix="/topic"/>
	</websocket:message-broker>
	
	<!-- email  -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="mr.minmin90@gmail.com" />
		<property name="password" value="su tg" />		
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	<bean id="mailService" class="mm.com.proj1.service.MailService">
	  <property name="mailSender" ref="mailSender" />
	 </bean>
	<!-- for velocity Email template -->
	 <bean id="velocityEngine"
	  class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
	  	<property name="resourceLoaderPath" value="classpath:/velocity" />
	  	<property name="preferFileSystemAccess" value="false" />
	 </bean>
	 
	 <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> 
        <property name="basename" value="/WEB-INF/messages" /> 
    </bean>
	
</beans>